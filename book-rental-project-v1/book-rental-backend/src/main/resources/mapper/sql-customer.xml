<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.bookrentalbackend.mapper.CustomerMapper">

    <sql id="customerListWhere">
        <if test=" id != null and id != '' ">
            AND id LIKE CONCAT('%' #{id}, '%')
        </if>
        <if test=" name != null and name != '' ">
            AND name LIKE CONCAT('%' #{name}, '%')
        </if>
        <if test=" birthday != null and birthday > 0 ">
            AND birthday LIKE CONCAT('%' #{birthday}, '%')
        </if>
        <if test=" phoneNumber != null and phoneNumber > 0 ">
            AND phone_number LIKE CONCAT('%' #{phoneNumber}, '%')
        </if>
    </sql>

    <select id="getCustomerList" parameterType="Map" resultType="com.example.bookrentalbackend.vo.CustomerVO">
        SELECT *
        FROM customer
        <where>
            <include refid="customerListWhere"/>
        </where>
        <choose>
            <when test=" sort != null and sort != '' ">
                ORDER BY ${sort} ${order}
            </when>
            <otherwise>
                ORDER BY name ASC
            </otherwise>
        </choose>
        LIMIT #{startInPage}, #{prePage}
    </select>

    <select id="getCustomerCount" parameterType="Map" resultType="int">
        SELECT COUNT(*)
        FROM customer
        <where>
            <include refid="customerListWhere"></include>
        </where>
    </select>

    <select id="findCustomerBySeq" resultType="com.example.bookrentalbackend.vo.CustomerVO">
        SELECT *
        FROM customer
        WHERE seq = #{seq}
    </select>

    <select id="findCustomerById" resultType="com.example.bookrentalbackend.vo.CustomerVO">
        SELECT *
        FROM customer
        WHERE id = #{id}
    </select>

    <insert id="insertCustomer" parameterType="Map">
        insert into customer(id, password, name, birthday, phone_number, memo)
        values (#{id}, #{password}, #{name}, #{birthday}, #{phoneNumber}, #{memo});
    </insert>

    <update id="updateCustomer" parameterType="Map" useGeneratedKeys="true" keyProperty="seq" >
        UPDATE customer
        SET password = #{password}
        , name = #{name}
        , id = #{id}
        , password = #{password}
        , birthday = #{birthday}
        , phone_number = #{phoneNumber}
        , memo = #{memo}
        , modified_date = NOW()
        WHERE seq = #{seq}
    </update>

    <delete id="deleteCustomer" parameterType="Map">
        DELETE
        FROM customer
        WHERE seq = #{seq}
    </delete>

</mapper>