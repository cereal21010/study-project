-도메인 작명
큰 단위부터 작은 단위로 
(com.ebrainsoft.backend.rentalbook)
(com.ebrainsoft.backend.rentalcar)
(com.ebrainsoft.common.rentalbook)

- 주석

- 작명
	.api -> controller

- validation 하는 방법 생각해보기

- service에서 service 참조( 취향 )

- 테이블 컬럼 수정 (대여 여부 체크)

- 포인트 상태 종류 중 취소 추가(대여를 취소 했을 때 - 재적립 관리자가 대여를 취소했을 때)

- StringUtils(apach) 사용

- jwt secury key는 프로젝트를 복사해서 다른 곳에서 사용되지 못하게 한다.(property , key xml? 활용)

- 토큰 체크하는 부분을 어노테이션으로 만들어라! (인증이 필요한 메소드는 인증 어노테이션을 붙여서 사용)
jwt 버전에 따라 key의 문자 수 제한이 있다

- 로그인한 고객의 정보는 token에서 가져온다

- 기본 주석 ( /* */ ) 메소드주석 말고,,,

- 필요하면 Util로 기능을 만들어서 사용( ex-pointUtil ) 
util은 포괄적이라 이름으로 추적이 힘들다. ( ex - factory,,, )

- service로 넘길 때 객체를 넘기지말고 값으로 넘기는게 좋다.(vo -> vo.getSeq)
단위 테스트가 좋은 코드다, 묶음으로 테스트하는건 나쁜거다

- 기존 vo가 있는데 필드 한두개를 확장하고 싶다. 그런데 vo에 추가하고 싶지는 않다
프론트에서 처리해서 보내준다(ex-리턴 할때 연체료 계산값을 추가해야할 경우)

- js에서 if 대신 state(enum) 같은거로 사용

- 도서 이미지 보이게(등록에서 도서 이미지 선택시, 리스트에서, 자세히 보기에서)
Reader, 

- front 에러처리
boardView (mvc)

- 서버에서 객체로 보낼 때
jsonObject에서 key값을 넣어줄 방법도 고려

- TODO 주석 활용

- 화면 2개, 서버 2개 (관리자, 사용자) 총 4개의 포트를 사용하도록

=============
아이콘
머터리얼?

============

1.21
- 도서관리, 파일 (요건 유지) 
- 로그인 인증.. 포함..




========================================================

